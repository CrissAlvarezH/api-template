name: CI

on:
  push:
    branches: [ "main" ]

jobs:

  tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Tests
        run: |
          source .venv/bin/activate
          make tests

  build:
    needs:
      - tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Build and push docker image
        run: |
          echo "${{secrets.DOCKER_PASSWORD}}" | docker login --username ${{secrets.DOCKER_USER}} --password-stdin
          make publish

  deploy:
    needs:
      - build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Trigger deploy on server
        run: |
          echo "${{secrets.AMAZON_SERVER_KEY}}" > server-key.pem
          chmod 600 server-key.pem
          make deploy user=${{secrets.SERVER_USER}} address=${{secrets.SERVER_ADDRESS}}
